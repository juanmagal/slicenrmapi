# coding: utf-8

"""
    Provisioning MnS

    OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.  # noqa: E501

    The version of the OpenAPI document: 17.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class FrequencyDomainPara(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            rimRSSubcarrierSpacing = schemas.IntSchema
            rIMRSBandwidth = schemas.IntSchema
            nrofGlobalRIMRSFrequencyCandidates = schemas.IntSchema
            rimRSCommonCarrierReferencePoint = schemas.IntSchema
            
            
            class rimRSStartingFrequencyOffsetIdList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.IntSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, decimal.Decimal, int, ]], typing.List[typing.Union[MetaOapg.items, decimal.Decimal, int, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'rimRSStartingFrequencyOffsetIdList':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "rimRSSubcarrierSpacing": rimRSSubcarrierSpacing,
                "rIMRSBandwidth": rIMRSBandwidth,
                "nrofGlobalRIMRSFrequencyCandidates": nrofGlobalRIMRSFrequencyCandidates,
                "rimRSCommonCarrierReferencePoint": rimRSCommonCarrierReferencePoint,
                "rimRSStartingFrequencyOffsetIdList": rimRSStartingFrequencyOffsetIdList,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rimRSSubcarrierSpacing"]) -> MetaOapg.properties.rimRSSubcarrierSpacing: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rIMRSBandwidth"]) -> MetaOapg.properties.rIMRSBandwidth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nrofGlobalRIMRSFrequencyCandidates"]) -> MetaOapg.properties.nrofGlobalRIMRSFrequencyCandidates: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rimRSCommonCarrierReferencePoint"]) -> MetaOapg.properties.rimRSCommonCarrierReferencePoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rimRSStartingFrequencyOffsetIdList"]) -> MetaOapg.properties.rimRSStartingFrequencyOffsetIdList: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["rimRSSubcarrierSpacing", "rIMRSBandwidth", "nrofGlobalRIMRSFrequencyCandidates", "rimRSCommonCarrierReferencePoint", "rimRSStartingFrequencyOffsetIdList", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rimRSSubcarrierSpacing"]) -> typing.Union[MetaOapg.properties.rimRSSubcarrierSpacing, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rIMRSBandwidth"]) -> typing.Union[MetaOapg.properties.rIMRSBandwidth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nrofGlobalRIMRSFrequencyCandidates"]) -> typing.Union[MetaOapg.properties.nrofGlobalRIMRSFrequencyCandidates, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rimRSCommonCarrierReferencePoint"]) -> typing.Union[MetaOapg.properties.rimRSCommonCarrierReferencePoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rimRSStartingFrequencyOffsetIdList"]) -> typing.Union[MetaOapg.properties.rimRSStartingFrequencyOffsetIdList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["rimRSSubcarrierSpacing", "rIMRSBandwidth", "nrofGlobalRIMRSFrequencyCandidates", "rimRSCommonCarrierReferencePoint", "rimRSStartingFrequencyOffsetIdList", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        rimRSSubcarrierSpacing: typing.Union[MetaOapg.properties.rimRSSubcarrierSpacing, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        rIMRSBandwidth: typing.Union[MetaOapg.properties.rIMRSBandwidth, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        nrofGlobalRIMRSFrequencyCandidates: typing.Union[MetaOapg.properties.nrofGlobalRIMRSFrequencyCandidates, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        rimRSCommonCarrierReferencePoint: typing.Union[MetaOapg.properties.rimRSCommonCarrierReferencePoint, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        rimRSStartingFrequencyOffsetIdList: typing.Union[MetaOapg.properties.rimRSStartingFrequencyOffsetIdList, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FrequencyDomainPara':
        return super().__new__(
            cls,
            *_args,
            rimRSSubcarrierSpacing=rimRSSubcarrierSpacing,
            rIMRSBandwidth=rIMRSBandwidth,
            nrofGlobalRIMRSFrequencyCandidates=nrofGlobalRIMRSFrequencyCandidates,
            rimRSCommonCarrierReferencePoint=rimRSCommonCarrierReferencePoint,
            rimRSStartingFrequencyOffsetIdList=rimRSStartingFrequencyOffsetIdList,
            _configuration=_configuration,
            **kwargs,
        )
