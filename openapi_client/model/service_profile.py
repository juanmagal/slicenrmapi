# coding: utf-8

"""
    Provisioning MnS

    OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.  # noqa: E501

    The version of the OpenAPI document: 17.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class ServiceProfile(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            serviceProfileId = schemas.StrSchema
        
            @staticmethod
            def plmnInfoList() -> typing.Type['PlmnInfoList']:
                return PlmnInfoList
            maxNumberofUEs = schemas.NumberSchema
            dLLatency = schemas.NumberSchema
            uLLatency = schemas.NumberSchema
        
            @staticmethod
            def uEMobilityLevel() -> typing.Type['MobilityLevel']:
                return MobilityLevel
        
            @staticmethod
            def sst() -> typing.Type['Sst']:
                return Sst
        
            @staticmethod
            def networkSliceSharingIndicator() -> typing.Type['NetworkSliceSharingIndicator']:
                return NetworkSliceSharingIndicator
            availability = schemas.NumberSchema
        
            @staticmethod
            def delayTolerance() -> typing.Type['DelayTolerance']:
                return DelayTolerance
        
            @staticmethod
            def dLDeterministicComm() -> typing.Type['DeterministicComm']:
                return DeterministicComm
        
            @staticmethod
            def uLDeterministicComm() -> typing.Type['DeterministicComm']:
                return DeterministicComm
        
            @staticmethod
            def dLThptPerSlice() -> typing.Type['XLThpt']:
                return XLThpt
        
            @staticmethod
            def dLThptPerUE() -> typing.Type['XLThpt']:
                return XLThpt
        
            @staticmethod
            def uLThptPerSlice() -> typing.Type['XLThpt']:
                return XLThpt
        
            @staticmethod
            def uLThptPerUE() -> typing.Type['XLThpt']:
                return XLThpt
        
            @staticmethod
            def dLMaxPktSize() -> typing.Type['MaxPktSize']:
                return MaxPktSize
        
            @staticmethod
            def uLMaxPktSize() -> typing.Type['MaxPktSize']:
                return MaxPktSize
        
            @staticmethod
            def maxNumberofPDUSessions() -> typing.Type['MaxNumberofPDUSessions']:
                return MaxNumberofPDUSessions
        
            @staticmethod
            def kPIMonitoring() -> typing.Type['KPIMonitoring']:
                return KPIMonitoring
        
            @staticmethod
            def nBIoT() -> typing.Type['NBIoT']:
                return NBIoT
        
            @staticmethod
            def radioSpectrum() -> typing.Type['RadioSpectrum']:
                return RadioSpectrum
        
            @staticmethod
            def synchronicity() -> typing.Type['Synchronicity']:
                return Synchronicity
        
            @staticmethod
            def positioning() -> typing.Type['Positioning']:
                return Positioning
        
            @staticmethod
            def userMgmtOpen() -> typing.Type['UserMgmtOpen']:
                return UserMgmtOpen
        
            @staticmethod
            def v2XCommModels() -> typing.Type['V2XCommModels']:
                return V2XCommModels
            coverageArea = schemas.StrSchema
        
            @staticmethod
            def termDensity() -> typing.Type['TermDensity']:
                return TermDensity
            activityFactor = schemas.Float32Schema
            uESpeed = schemas.IntSchema
            jitter = schemas.IntSchema
            survivalTime = schemas.NumberSchema
            reliability = schemas.NumberSchema
            maxDLDataVolume = schemas.NumberSchema
            maxULDataVolume = schemas.NumberSchema
        
            @staticmethod
            def sliceSimultaneousUse() -> typing.Type['SliceSimultaneousUse']:
                return SliceSimultaneousUse
        
            @staticmethod
            def energyEfficiency() -> typing.Type['EnergyEfficiency']:
                return EnergyEfficiency
        
            @staticmethod
            def nssaaSupport() -> typing.Type['NSSAASupport']:
                return NSSAASupport
        
            @staticmethod
            def n6Protection() -> typing.Type['N6Protection']:
                return N6Protection
            __annotations__ = {
                "serviceProfileId": serviceProfileId,
                "plmnInfoList": plmnInfoList,
                "maxNumberofUEs": maxNumberofUEs,
                "dLLatency": dLLatency,
                "uLLatency": uLLatency,
                "uEMobilityLevel": uEMobilityLevel,
                "sst": sst,
                "networkSliceSharingIndicator": networkSliceSharingIndicator,
                "availability": availability,
                "delayTolerance": delayTolerance,
                "dLDeterministicComm": dLDeterministicComm,
                "uLDeterministicComm": uLDeterministicComm,
                "dLThptPerSlice": dLThptPerSlice,
                "dLThptPerUE": dLThptPerUE,
                "uLThptPerSlice": uLThptPerSlice,
                "uLThptPerUE": uLThptPerUE,
                "dLMaxPktSize": dLMaxPktSize,
                "uLMaxPktSize": uLMaxPktSize,
                "maxNumberofPDUSessions": maxNumberofPDUSessions,
                "kPIMonitoring": kPIMonitoring,
                "nBIoT": nBIoT,
                "radioSpectrum": radioSpectrum,
                "synchronicity": synchronicity,
                "positioning": positioning,
                "userMgmtOpen": userMgmtOpen,
                "v2XCommModels": v2XCommModels,
                "coverageArea": coverageArea,
                "termDensity": termDensity,
                "activityFactor": activityFactor,
                "uESpeed": uESpeed,
                "jitter": jitter,
                "survivalTime": survivalTime,
                "reliability": reliability,
                "maxDLDataVolume": maxDLDataVolume,
                "maxULDataVolume": maxULDataVolume,
                "sliceSimultaneousUse": sliceSimultaneousUse,
                "energyEfficiency": energyEfficiency,
                "nssaaSupport": nssaaSupport,
                "n6Protection": n6Protection,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["serviceProfileId"]) -> MetaOapg.properties.serviceProfileId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plmnInfoList"]) -> 'PlmnInfoList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxNumberofUEs"]) -> MetaOapg.properties.maxNumberofUEs: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dLLatency"]) -> MetaOapg.properties.dLLatency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uLLatency"]) -> MetaOapg.properties.uLLatency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uEMobilityLevel"]) -> 'MobilityLevel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sst"]) -> 'Sst': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["networkSliceSharingIndicator"]) -> 'NetworkSliceSharingIndicator': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["availability"]) -> MetaOapg.properties.availability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["delayTolerance"]) -> 'DelayTolerance': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dLDeterministicComm"]) -> 'DeterministicComm': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uLDeterministicComm"]) -> 'DeterministicComm': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dLThptPerSlice"]) -> 'XLThpt': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dLThptPerUE"]) -> 'XLThpt': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uLThptPerSlice"]) -> 'XLThpt': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uLThptPerUE"]) -> 'XLThpt': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dLMaxPktSize"]) -> 'MaxPktSize': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uLMaxPktSize"]) -> 'MaxPktSize': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxNumberofPDUSessions"]) -> 'MaxNumberofPDUSessions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kPIMonitoring"]) -> 'KPIMonitoring': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nBIoT"]) -> 'NBIoT': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["radioSpectrum"]) -> 'RadioSpectrum': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["synchronicity"]) -> 'Synchronicity': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positioning"]) -> 'Positioning': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userMgmtOpen"]) -> 'UserMgmtOpen': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["v2XCommModels"]) -> 'V2XCommModels': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["coverageArea"]) -> MetaOapg.properties.coverageArea: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["termDensity"]) -> 'TermDensity': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["activityFactor"]) -> MetaOapg.properties.activityFactor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uESpeed"]) -> MetaOapg.properties.uESpeed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jitter"]) -> MetaOapg.properties.jitter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["survivalTime"]) -> MetaOapg.properties.survivalTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reliability"]) -> MetaOapg.properties.reliability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxDLDataVolume"]) -> MetaOapg.properties.maxDLDataVolume: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxULDataVolume"]) -> MetaOapg.properties.maxULDataVolume: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sliceSimultaneousUse"]) -> 'SliceSimultaneousUse': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["energyEfficiency"]) -> 'EnergyEfficiency': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nssaaSupport"]) -> 'NSSAASupport': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["n6Protection"]) -> 'N6Protection': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["serviceProfileId", "plmnInfoList", "maxNumberofUEs", "dLLatency", "uLLatency", "uEMobilityLevel", "sst", "networkSliceSharingIndicator", "availability", "delayTolerance", "dLDeterministicComm", "uLDeterministicComm", "dLThptPerSlice", "dLThptPerUE", "uLThptPerSlice", "uLThptPerUE", "dLMaxPktSize", "uLMaxPktSize", "maxNumberofPDUSessions", "kPIMonitoring", "nBIoT", "radioSpectrum", "synchronicity", "positioning", "userMgmtOpen", "v2XCommModels", "coverageArea", "termDensity", "activityFactor", "uESpeed", "jitter", "survivalTime", "reliability", "maxDLDataVolume", "maxULDataVolume", "sliceSimultaneousUse", "energyEfficiency", "nssaaSupport", "n6Protection", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["serviceProfileId"]) -> typing.Union[MetaOapg.properties.serviceProfileId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plmnInfoList"]) -> typing.Union['PlmnInfoList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxNumberofUEs"]) -> typing.Union[MetaOapg.properties.maxNumberofUEs, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dLLatency"]) -> typing.Union[MetaOapg.properties.dLLatency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uLLatency"]) -> typing.Union[MetaOapg.properties.uLLatency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uEMobilityLevel"]) -> typing.Union['MobilityLevel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sst"]) -> typing.Union['Sst', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["networkSliceSharingIndicator"]) -> typing.Union['NetworkSliceSharingIndicator', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["availability"]) -> typing.Union[MetaOapg.properties.availability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["delayTolerance"]) -> typing.Union['DelayTolerance', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dLDeterministicComm"]) -> typing.Union['DeterministicComm', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uLDeterministicComm"]) -> typing.Union['DeterministicComm', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dLThptPerSlice"]) -> typing.Union['XLThpt', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dLThptPerUE"]) -> typing.Union['XLThpt', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uLThptPerSlice"]) -> typing.Union['XLThpt', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uLThptPerUE"]) -> typing.Union['XLThpt', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dLMaxPktSize"]) -> typing.Union['MaxPktSize', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uLMaxPktSize"]) -> typing.Union['MaxPktSize', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxNumberofPDUSessions"]) -> typing.Union['MaxNumberofPDUSessions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kPIMonitoring"]) -> typing.Union['KPIMonitoring', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nBIoT"]) -> typing.Union['NBIoT', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["radioSpectrum"]) -> typing.Union['RadioSpectrum', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["synchronicity"]) -> typing.Union['Synchronicity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positioning"]) -> typing.Union['Positioning', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userMgmtOpen"]) -> typing.Union['UserMgmtOpen', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["v2XCommModels"]) -> typing.Union['V2XCommModels', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["coverageArea"]) -> typing.Union[MetaOapg.properties.coverageArea, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["termDensity"]) -> typing.Union['TermDensity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["activityFactor"]) -> typing.Union[MetaOapg.properties.activityFactor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uESpeed"]) -> typing.Union[MetaOapg.properties.uESpeed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jitter"]) -> typing.Union[MetaOapg.properties.jitter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["survivalTime"]) -> typing.Union[MetaOapg.properties.survivalTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reliability"]) -> typing.Union[MetaOapg.properties.reliability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxDLDataVolume"]) -> typing.Union[MetaOapg.properties.maxDLDataVolume, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxULDataVolume"]) -> typing.Union[MetaOapg.properties.maxULDataVolume, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sliceSimultaneousUse"]) -> typing.Union['SliceSimultaneousUse', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["energyEfficiency"]) -> typing.Union['EnergyEfficiency', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nssaaSupport"]) -> typing.Union['NSSAASupport', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["n6Protection"]) -> typing.Union['N6Protection', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["serviceProfileId", "plmnInfoList", "maxNumberofUEs", "dLLatency", "uLLatency", "uEMobilityLevel", "sst", "networkSliceSharingIndicator", "availability", "delayTolerance", "dLDeterministicComm", "uLDeterministicComm", "dLThptPerSlice", "dLThptPerUE", "uLThptPerSlice", "uLThptPerUE", "dLMaxPktSize", "uLMaxPktSize", "maxNumberofPDUSessions", "kPIMonitoring", "nBIoT", "radioSpectrum", "synchronicity", "positioning", "userMgmtOpen", "v2XCommModels", "coverageArea", "termDensity", "activityFactor", "uESpeed", "jitter", "survivalTime", "reliability", "maxDLDataVolume", "maxULDataVolume", "sliceSimultaneousUse", "energyEfficiency", "nssaaSupport", "n6Protection", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        serviceProfileId: typing.Union[MetaOapg.properties.serviceProfileId, str, schemas.Unset] = schemas.unset,
        plmnInfoList: typing.Union['PlmnInfoList', schemas.Unset] = schemas.unset,
        maxNumberofUEs: typing.Union[MetaOapg.properties.maxNumberofUEs, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dLLatency: typing.Union[MetaOapg.properties.dLLatency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        uLLatency: typing.Union[MetaOapg.properties.uLLatency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        uEMobilityLevel: typing.Union['MobilityLevel', schemas.Unset] = schemas.unset,
        sst: typing.Union['Sst', schemas.Unset] = schemas.unset,
        networkSliceSharingIndicator: typing.Union['NetworkSliceSharingIndicator', schemas.Unset] = schemas.unset,
        availability: typing.Union[MetaOapg.properties.availability, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        delayTolerance: typing.Union['DelayTolerance', schemas.Unset] = schemas.unset,
        dLDeterministicComm: typing.Union['DeterministicComm', schemas.Unset] = schemas.unset,
        uLDeterministicComm: typing.Union['DeterministicComm', schemas.Unset] = schemas.unset,
        dLThptPerSlice: typing.Union['XLThpt', schemas.Unset] = schemas.unset,
        dLThptPerUE: typing.Union['XLThpt', schemas.Unset] = schemas.unset,
        uLThptPerSlice: typing.Union['XLThpt', schemas.Unset] = schemas.unset,
        uLThptPerUE: typing.Union['XLThpt', schemas.Unset] = schemas.unset,
        dLMaxPktSize: typing.Union['MaxPktSize', schemas.Unset] = schemas.unset,
        uLMaxPktSize: typing.Union['MaxPktSize', schemas.Unset] = schemas.unset,
        maxNumberofPDUSessions: typing.Union['MaxNumberofPDUSessions', schemas.Unset] = schemas.unset,
        kPIMonitoring: typing.Union['KPIMonitoring', schemas.Unset] = schemas.unset,
        nBIoT: typing.Union['NBIoT', schemas.Unset] = schemas.unset,
        radioSpectrum: typing.Union['RadioSpectrum', schemas.Unset] = schemas.unset,
        synchronicity: typing.Union['Synchronicity', schemas.Unset] = schemas.unset,
        positioning: typing.Union['Positioning', schemas.Unset] = schemas.unset,
        userMgmtOpen: typing.Union['UserMgmtOpen', schemas.Unset] = schemas.unset,
        v2XCommModels: typing.Union['V2XCommModels', schemas.Unset] = schemas.unset,
        coverageArea: typing.Union[MetaOapg.properties.coverageArea, str, schemas.Unset] = schemas.unset,
        termDensity: typing.Union['TermDensity', schemas.Unset] = schemas.unset,
        activityFactor: typing.Union[MetaOapg.properties.activityFactor, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        uESpeed: typing.Union[MetaOapg.properties.uESpeed, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        jitter: typing.Union[MetaOapg.properties.jitter, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        survivalTime: typing.Union[MetaOapg.properties.survivalTime, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        reliability: typing.Union[MetaOapg.properties.reliability, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        maxDLDataVolume: typing.Union[MetaOapg.properties.maxDLDataVolume, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        maxULDataVolume: typing.Union[MetaOapg.properties.maxULDataVolume, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sliceSimultaneousUse: typing.Union['SliceSimultaneousUse', schemas.Unset] = schemas.unset,
        energyEfficiency: typing.Union['EnergyEfficiency', schemas.Unset] = schemas.unset,
        nssaaSupport: typing.Union['NSSAASupport', schemas.Unset] = schemas.unset,
        n6Protection: typing.Union['N6Protection', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ServiceProfile':
        return super().__new__(
            cls,
            *_args,
            serviceProfileId=serviceProfileId,
            plmnInfoList=plmnInfoList,
            maxNumberofUEs=maxNumberofUEs,
            dLLatency=dLLatency,
            uLLatency=uLLatency,
            uEMobilityLevel=uEMobilityLevel,
            sst=sst,
            networkSliceSharingIndicator=networkSliceSharingIndicator,
            availability=availability,
            delayTolerance=delayTolerance,
            dLDeterministicComm=dLDeterministicComm,
            uLDeterministicComm=uLDeterministicComm,
            dLThptPerSlice=dLThptPerSlice,
            dLThptPerUE=dLThptPerUE,
            uLThptPerSlice=uLThptPerSlice,
            uLThptPerUE=uLThptPerUE,
            dLMaxPktSize=dLMaxPktSize,
            uLMaxPktSize=uLMaxPktSize,
            maxNumberofPDUSessions=maxNumberofPDUSessions,
            kPIMonitoring=kPIMonitoring,
            nBIoT=nBIoT,
            radioSpectrum=radioSpectrum,
            synchronicity=synchronicity,
            positioning=positioning,
            userMgmtOpen=userMgmtOpen,
            v2XCommModels=v2XCommModels,
            coverageArea=coverageArea,
            termDensity=termDensity,
            activityFactor=activityFactor,
            uESpeed=uESpeed,
            jitter=jitter,
            survivalTime=survivalTime,
            reliability=reliability,
            maxDLDataVolume=maxDLDataVolume,
            maxULDataVolume=maxULDataVolume,
            sliceSimultaneousUse=sliceSimultaneousUse,
            energyEfficiency=energyEfficiency,
            nssaaSupport=nssaaSupport,
            n6Protection=n6Protection,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.delay_tolerance import DelayTolerance
from openapi_client.model.deterministic_comm import DeterministicComm
from openapi_client.model.energy_efficiency import EnergyEfficiency
from openapi_client.model.kpi_monitoring import KPIMonitoring
from openapi_client.model.max_numberof_pdu_sessions import MaxNumberofPDUSessions
from openapi_client.model.max_pkt_size import MaxPktSize
from openapi_client.model.mobility_level import MobilityLevel
from openapi_client.model.n6_protection import N6Protection
from openapi_client.model.nbio_t import NBIoT
from openapi_client.model.network_slice_sharing_indicator import NetworkSliceSharingIndicator
from openapi_client.model.nssaa_support import NSSAASupport
from openapi_client.model.plmn_info_list import PlmnInfoList
from openapi_client.model.positioning import Positioning
from openapi_client.model.radio_spectrum import RadioSpectrum
from openapi_client.model.slice_simultaneous_use import SliceSimultaneousUse
from openapi_client.model.sst import Sst
from openapi_client.model.synchronicity import Synchronicity
from openapi_client.model.term_density import TermDensity
from openapi_client.model.user_mgmt_open import UserMgmtOpen
from openapi_client.model.v2_x_comm_models import V2XCommModels
from openapi_client.model.xl_thpt import XLThpt
