# coding: utf-8

"""
    Provisioning MnS

    OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.  # noqa: E501

    The version of the OpenAPI document: 17.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class JobTypeType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Specifies whether the TraceJob represents only MDT, Logged MBSFN MDT, Trace or a combined Trace and MDT job. Applicable for Trace, MDT, RCEF and RLF reporting. See 3GPP TS 32.422 clause 5.9a for additional details.
    """


    class MetaOapg:
        enum_value_to_name = {
            "IMMEDIATE_MDT_ONLY": "IMMEDIATE_MDT_ONLY",
            "LOGGED_MDT_ONLY": "LOGGED_MDT_ONLY",
            "TRACE_ONLY": "TRACE_ONLY",
            "IMMEDIATE_MDT AND TRACE": "IMMEDIATE_MDT_AND_TRACE",
            "RLF_REPORT_ONLY": "RLF_REPORT_ONLY",
            "RCEF_REPORT_ONLY": "RCEF_REPORT_ONLY",
            "LOGGED_MBSFN_MDT": "LOGGED_MBSFN_MDT",
        }
    
    @schemas.classproperty
    def IMMEDIATE_MDT_ONLY(cls):
        return cls("IMMEDIATE_MDT_ONLY")
    
    @schemas.classproperty
    def LOGGED_MDT_ONLY(cls):
        return cls("LOGGED_MDT_ONLY")
    
    @schemas.classproperty
    def TRACE_ONLY(cls):
        return cls("TRACE_ONLY")
    
    @schemas.classproperty
    def IMMEDIATE_MDT_AND_TRACE(cls):
        return cls("IMMEDIATE_MDT AND TRACE")
    
    @schemas.classproperty
    def RLF_REPORT_ONLY(cls):
        return cls("RLF_REPORT_ONLY")
    
    @schemas.classproperty
    def RCEF_REPORT_ONLY(cls):
        return cls("RCEF_REPORT_ONLY")
    
    @schemas.classproperty
    def LOGGED_MBSFN_MDT(cls):
        return cls("LOGGED_MBSFN_MDT")
