# coding: utf-8

"""
    Provisioning MnS

    OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.  # noqa: E501

    The version of the OpenAPI document: 17.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class TriggeringEventsType(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Specifies when to start a Trace Recording Session and which message shall be recorded first, when to stop a Trace Recording Session and which message shall be recorded last respectively. See 3GPP TS 32.422 clause 5.1 for additional detials.
    """


    class MetaOapg:
        
        class properties:
            
            
            class MSC_SERVER(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def MO_MT_CALLS(cls):
                            return cls("MO_MT_CALLS")
                        
                        @schemas.classproperty
                        def MO_MT_SMS(cls):
                            return cls("MO_MT_SMS")
                        
                        @schemas.classproperty
                        def LU_IMSIATTACH_IMSIDETACH(cls):
                            return cls("LU_IMSIattach_IMSIdetach")
                        
                        @schemas.classproperty
                        def HANDOVER(cls):
                            return cls("HANDOVER")
                        
                        @schemas.classproperty
                        def SS(cls):
                            return cls("SS")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'MSC_SERVER':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class SGSN(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def PDPCONTEXT(cls):
                            return cls("PDPcontext")
                        
                        @schemas.classproperty
                        def MO_MT_SMS(cls):
                            return cls("MO_MT_SMS")
                        
                        @schemas.classproperty
                        def RAU_GPRSATTACH_GPRSDETACH(cls):
                            return cls("RAU_GPRSattach_GPRSdetach")
                        
                        @schemas.classproperty
                        def MBMSCONTEXT(cls):
                            return cls("MBMScontext")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SGSN':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class MGW(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def CONTEXT(cls):
                            return cls("CONTEXT")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'MGW':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class GGSN(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def PDPCONTEXT(cls):
                            return cls("PDPcontext")
                        
                        @schemas.classproperty
                        def MBMSCONTEXT(cls):
                            return cls("MBMScontext")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'GGSN':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class IMS(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def SIPSESSION_STANDALONE_TRANSACTION(cls):
                            return cls("SIPsession_StandaloneTransaction")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'IMS':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class BM_SC(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def MBMSACTIVATION(cls):
                            return cls("MBMSactivation")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'BM_SC':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class MME(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def UEINITIATED_PDNCONNECTIVITY_REQUEST(cls):
                            return cls("UEinitiatedPDNconnectivityRequest")
                        
                        @schemas.classproperty
                        def SERVICE_REQUEST(cls):
                            return cls("ServiceRequest")
                        
                        @schemas.classproperty
                        def INITIAL_ATTACH_TAU_DETACH(cls):
                            return cls("InitialAttach_TAU_Detach")
                        
                        @schemas.classproperty
                        def UEINITIATED_PDNDISCONNECTION(cls):
                            return cls("UEinitiatedPDNdisconnection")
                        
                        @schemas.classproperty
                        def BEARER_ACTIVATION_MODIFICATION_DELETION(cls):
                            return cls("BearerActivationModificationDeletion")
                        
                        @schemas.classproperty
                        def HANDOVER(cls):
                            return cls("Handover")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'MME':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class SGW(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def PDNCONNECTION_CREATION(cls):
                            return cls("PDNconnectionCreation")
                        
                        @schemas.classproperty
                        def PDNCONNECTION_TERMINATION(cls):
                            return cls("PDNconnectionTermination")
                        
                        @schemas.classproperty
                        def BEARER_ACTIVATION_MODIFICATION_DELETION(cls):
                            return cls("BearerActivationModificationDeletion")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SGW':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class PGW(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def PDNCONNECTION_CREATION(cls):
                            return cls("PDNconnectionCreation")
                        
                        @schemas.classproperty
                        def PDNCONNECTION_TERMINATION(cls):
                            return cls("PDNconnectionTermination")
                        
                        @schemas.classproperty
                        def BEARER_ACTIVATION_MODIFICATION_DELETION(cls):
                            return cls("BearerActivationModificationDeletion")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'PGW':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class AMF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def REGISTRATION(cls):
                            return cls("Registration")
                        
                        @schemas.classproperty
                        def SERVICE_REQUEST(cls):
                            return cls("ServiceRequest")
                        
                        @schemas.classproperty
                        def HANDOVER(cls):
                            return cls("Handover")
                        
                        @schemas.classproperty
                        def UEDEREGISTRATION(cls):
                            return cls("UEderegistration")
                        
                        @schemas.classproperty
                        def NETWORK_DEREGISTRATION(cls):
                            return cls("NetworkDeregistration")
                        
                        @schemas.classproperty
                        def UEMOBILITY_FROM_EPC(cls):
                            return cls("UEMobilityFromEPC")
                        
                        @schemas.classproperty
                        def UEMOBILITY_TO_EPC(cls):
                            return cls("UEMobilityToEPC")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'AMF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class SMF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def PDUSESSION_ESTABLISHMENT(cls):
                            return cls("PDUsessionEstablishment")
                        
                        @schemas.classproperty
                        def PDUSESSION_MODIFICATION(cls):
                            return cls("PDUsessionModification")
                        
                        @schemas.classproperty
                        def PDUSESSION_RELEASE(cls):
                            return cls("PDUsessionRelease")
                        
                        @schemas.classproperty
                        def PDUSESSION_UPACTIVATION_DEACTIVATION(cls):
                            return cls("PDUsessionUPactivationDeactivation")
                        
                        @schemas.classproperty
                        def MOBILITY_BTW3GPP_AND_N3GPP_TO5GC(cls):
                            return cls("MobilityBtw3gppAndN3gppTo5GC")
                        
                        @schemas.classproperty
                        def MOBILITY_FROM_EPC(cls):
                            return cls("MobilityFromEpc")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SMF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class PCF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def AMPOLICY(cls):
                            return cls("AMpolicy")
                        
                        @schemas.classproperty
                        def SMPOLICY(cls):
                            return cls("SMpolicy")
                        
                        @schemas.classproperty
                        def AUTHORIZATION(cls):
                            return cls("Authorization")
                        
                        @schemas.classproperty
                        def BDTPOLICY(cls):
                            return cls("BDTpolicy")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'PCF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class UPF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def N4SESSION(cls):
                            return cls("N4Session")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'UPF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class AUSF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def UEAUTHENTICATION(cls):
                            return cls("UEauthentication")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'AUSF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class NEF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def EVENT_EXPOSURE(cls):
                            return cls("EventExposure")
                        
                        @schemas.classproperty
                        def PFDMANAGEMENT(cls):
                            return cls("PFDmanagement")
                        
                        @schemas.classproperty
                        def PARAMETER_PROVISION(cls):
                            return cls("ParameterProvision")
                        
                        @schemas.classproperty
                        def TRIGGER(cls):
                            return cls("Trigger")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'NEF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class NRF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def NFMANAGEMENT(cls):
                            return cls("NFmanagement")
                        
                        @schemas.classproperty
                        def NFDISCOVERY(cls):
                            return cls("NFdiscovery")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'NRF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class NSSF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def NSSELECTION(cls):
                            return cls("NSSelection")
                        
                        @schemas.classproperty
                        def NSSAI(cls):
                            return cls("NSSAI")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'NSSF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class SMSF(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def SMSERVICE(cls):
                            return cls("SMservice")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'SMSF':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class UDM(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    
                    class items(
                        schemas.EnumBase,
                        schemas.StrSchema
                    ):
                        
                        @schemas.classproperty
                        def UECONTEXT(cls):
                            return cls("UEcontext")
                        
                        @schemas.classproperty
                        def SUBSCRIBER_DATA(cls):
                            return cls("SubscriberData")
                        
                        @schemas.classproperty
                        def UEAUTHENTICATION(cls):
                            return cls("UEauthentication")
                        
                        @schemas.classproperty
                        def EVENT_EXPOSURE(cls):
                            return cls("EventExposure")
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'UDM':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "MSC_SERVER": MSC_SERVER,
                "SGSN": SGSN,
                "MGW": MGW,
                "GGSN": GGSN,
                "IMS": IMS,
                "BM_SC": BM_SC,
                "MME": MME,
                "SGW": SGW,
                "PGW": PGW,
                "AMF": AMF,
                "SMF": SMF,
                "PCF": PCF,
                "UPF": UPF,
                "AUSF": AUSF,
                "NEF": NEF,
                "NRF": NRF,
                "NSSF": NSSF,
                "SMSF": SMSF,
                "UDM": UDM,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MSC_SERVER"]) -> MetaOapg.properties.MSC_SERVER: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SGSN"]) -> MetaOapg.properties.SGSN: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MGW"]) -> MetaOapg.properties.MGW: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["GGSN"]) -> MetaOapg.properties.GGSN: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IMS"]) -> MetaOapg.properties.IMS: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BM_SC"]) -> MetaOapg.properties.BM_SC: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MME"]) -> MetaOapg.properties.MME: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SGW"]) -> MetaOapg.properties.SGW: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PGW"]) -> MetaOapg.properties.PGW: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AMF"]) -> MetaOapg.properties.AMF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SMF"]) -> MetaOapg.properties.SMF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PCF"]) -> MetaOapg.properties.PCF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UPF"]) -> MetaOapg.properties.UPF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AUSF"]) -> MetaOapg.properties.AUSF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NEF"]) -> MetaOapg.properties.NEF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NRF"]) -> MetaOapg.properties.NRF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["NSSF"]) -> MetaOapg.properties.NSSF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SMSF"]) -> MetaOapg.properties.SMSF: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UDM"]) -> MetaOapg.properties.UDM: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["MSC_SERVER", "SGSN", "MGW", "GGSN", "IMS", "BM_SC", "MME", "SGW", "PGW", "AMF", "SMF", "PCF", "UPF", "AUSF", "NEF", "NRF", "NSSF", "SMSF", "UDM", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MSC_SERVER"]) -> typing.Union[MetaOapg.properties.MSC_SERVER, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SGSN"]) -> typing.Union[MetaOapg.properties.SGSN, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MGW"]) -> typing.Union[MetaOapg.properties.MGW, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["GGSN"]) -> typing.Union[MetaOapg.properties.GGSN, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IMS"]) -> typing.Union[MetaOapg.properties.IMS, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BM_SC"]) -> typing.Union[MetaOapg.properties.BM_SC, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MME"]) -> typing.Union[MetaOapg.properties.MME, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SGW"]) -> typing.Union[MetaOapg.properties.SGW, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PGW"]) -> typing.Union[MetaOapg.properties.PGW, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AMF"]) -> typing.Union[MetaOapg.properties.AMF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SMF"]) -> typing.Union[MetaOapg.properties.SMF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PCF"]) -> typing.Union[MetaOapg.properties.PCF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UPF"]) -> typing.Union[MetaOapg.properties.UPF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AUSF"]) -> typing.Union[MetaOapg.properties.AUSF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NEF"]) -> typing.Union[MetaOapg.properties.NEF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NRF"]) -> typing.Union[MetaOapg.properties.NRF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["NSSF"]) -> typing.Union[MetaOapg.properties.NSSF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SMSF"]) -> typing.Union[MetaOapg.properties.SMSF, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UDM"]) -> typing.Union[MetaOapg.properties.UDM, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["MSC_SERVER", "SGSN", "MGW", "GGSN", "IMS", "BM_SC", "MME", "SGW", "PGW", "AMF", "SMF", "PCF", "UPF", "AUSF", "NEF", "NRF", "NSSF", "SMSF", "UDM", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        MSC_SERVER: typing.Union[MetaOapg.properties.MSC_SERVER, list, tuple, schemas.Unset] = schemas.unset,
        SGSN: typing.Union[MetaOapg.properties.SGSN, list, tuple, schemas.Unset] = schemas.unset,
        MGW: typing.Union[MetaOapg.properties.MGW, list, tuple, schemas.Unset] = schemas.unset,
        GGSN: typing.Union[MetaOapg.properties.GGSN, list, tuple, schemas.Unset] = schemas.unset,
        IMS: typing.Union[MetaOapg.properties.IMS, list, tuple, schemas.Unset] = schemas.unset,
        BM_SC: typing.Union[MetaOapg.properties.BM_SC, list, tuple, schemas.Unset] = schemas.unset,
        MME: typing.Union[MetaOapg.properties.MME, list, tuple, schemas.Unset] = schemas.unset,
        SGW: typing.Union[MetaOapg.properties.SGW, list, tuple, schemas.Unset] = schemas.unset,
        PGW: typing.Union[MetaOapg.properties.PGW, list, tuple, schemas.Unset] = schemas.unset,
        AMF: typing.Union[MetaOapg.properties.AMF, list, tuple, schemas.Unset] = schemas.unset,
        SMF: typing.Union[MetaOapg.properties.SMF, list, tuple, schemas.Unset] = schemas.unset,
        PCF: typing.Union[MetaOapg.properties.PCF, list, tuple, schemas.Unset] = schemas.unset,
        UPF: typing.Union[MetaOapg.properties.UPF, list, tuple, schemas.Unset] = schemas.unset,
        AUSF: typing.Union[MetaOapg.properties.AUSF, list, tuple, schemas.Unset] = schemas.unset,
        NEF: typing.Union[MetaOapg.properties.NEF, list, tuple, schemas.Unset] = schemas.unset,
        NRF: typing.Union[MetaOapg.properties.NRF, list, tuple, schemas.Unset] = schemas.unset,
        NSSF: typing.Union[MetaOapg.properties.NSSF, list, tuple, schemas.Unset] = schemas.unset,
        SMSF: typing.Union[MetaOapg.properties.SMSF, list, tuple, schemas.Unset] = schemas.unset,
        UDM: typing.Union[MetaOapg.properties.UDM, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TriggeringEventsType':
        return super().__new__(
            cls,
            *_args,
            MSC_SERVER=MSC_SERVER,
            SGSN=SGSN,
            MGW=MGW,
            GGSN=GGSN,
            IMS=IMS,
            BM_SC=BM_SC,
            MME=MME,
            SGW=SGW,
            PGW=PGW,
            AMF=AMF,
            SMF=SMF,
            PCF=PCF,
            UPF=UPF,
            AUSF=AUSF,
            NEF=NEF,
            NRF=NRF,
            NSSF=NSSF,
            SMSF=SMSF,
            UDM=UDM,
            _configuration=_configuration,
            **kwargs,
        )
